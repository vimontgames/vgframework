name: "Reusable Build Workflow"

on:
  workflow_call:
    inputs:
      build_name:
        description: "Name of the build job"
        required: true
        type: string
      build_platform:
        description: "Platform to build (Win64 DX12, ARM64EC Vulkan, etc.)"
        required: true
        type: string
      build_configuration:
        description: "Build configuration (Debug, Release, etc.)"
        required: true
        type: string
    secrets:
      DISCORD_BUILD_WEBHOOK_URL:
        required: true

env:
  SOLUTION_FILE_PATH: vgframework.sln

permissions:
  contents: read

jobs:
  build:
    name: ${{ inputs.build_name }}
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4

      - name: Add MSBuild to PATH
        uses: microsoft/setup-msbuild@v2
        with:
          vs-version: '[17.11.2, 18.0.0)'

      - name: Restore NuGet packages
        run: nuget restore ${{ env.SOLUTION_FILE_PATH }}

      - name: Build
        run: |
          msbuild /m /p:Configuration=${{ inputs.build_configuration }} /p:Platform="${{ inputs.build_platform }}" ${{ env.SOLUTION_FILE_PATH }}

      - name: Send Success Notification
        if: ${{ success() }}
        run: |
          $DISCORD_BUILD_WEBHOOK_URL = "${{ secrets.DISCORD_BUILD_WEBHOOK_URL }}"
          $commitMessage = "${{ github.event.head_commit.message }}"
          $splitMessage = $commitMessage -split '\r?\n\r?\n', 2
          $summary = $splitMessage[0]
          $description = if ($splitMessage.Length -gt 1) { $splitMessage[1] } else { "" }
          $escapedSummary = $summary -replace '"', '\"' -replace "`r`n", ' ' -replace "`n", ' '
          $escapedDescription = $description -replace '"', '\"' -replace "`r`n", ' ' -replace "`n", ' '
          
          $shortCommitSha = "${{ github.sha }}"[0..6]
          $jobUrl = "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"

          $jsonPayload = @"
          {
            "username": "Gros Covid",
            "embeds": [
              {
                "type": "rich",
                "title": "Build Succeeded: ``$shortCommitSha``",
                "description": "$escapedSummary",
                "color": 38912,
                "url": "$jobUrl",
                "thumbnail": {
                  "url": "https://github.com/vimontgames/vgframework/blob/master/doc/img/buildsuccess.png?raw=true"
                },
                "author": {
                  "name": "$($env:GITHUB_ACTOR)",
                  "url": "https://github.com/$($env:GITHUB_ACTOR)",
                  "icon_url": "https://avatars.githubusercontent.com/u/$($env:GITHUB_ACTOR_ID)?v=4"
                }
              }
            ]
          }
          "@

          curl -H "Content-Type: application/json" -X POST -d $jsonPayload $DISCORD_BUILD_WEBHOOK_URL

      - name: Send Failure Notification
        if: ${{ failure() }}
        run: |
          $DISCORD_BUILD_WEBHOOK_URL = "${{ secrets.DISCORD_BUILD_WEBHOOK_URL }}"
          $commitMessage = "${{ github.event.head_commit.message }}"
          $splitMessage = $commitMessage -split '\r?\n\r?\n', 2
          $summary = $splitMessage[0]
          $description = if ($splitMessage.Length -gt 1) { $splitMessage[1] } else { "" }
          $escapedSummary = $summary -replace '"', '\"' -replace "`r`n", ' ' -replace "`n", ' '
          $escapedDescription = $description -replace '"', '\"' -replace "`r`n", ' ' -replace "`n", ' '

          $shortCommitSha = "${{ github.sha }}"[0..6]
          $jobUrl = "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"

          $jsonPayload = @"
          {
            "username": "Gros Covid",
            "embeds": [
              {
                "type": "rich",
                "title": "Build Failed: ``$shortCommitSha``",
                "description": "$escapedSummary",
                "color": 16515049,
                "url": "$jobUrl",
                "thumbnail": {
                  "url": "https://github.com/vimontgames/vgframework/blob/master/doc/img/buildfailed.png?raw=true"
                },
                "author": {
                  "name": "$($env:GITHUB_ACTOR)",
                  "url": "https://github.com/$($env:GITHUB_ACTOR)",
                  "icon_url": "https://avatars.githubusercontent.com/u/$($env:GITHUB_ACTOR_ID)?v=4"
                }
              }
            ]
          }
          "@

          curl -H "Content-Type: application/json" -X POST -d $jsonPayload $DISCORD_BUILD_WEBHOOK_URL
